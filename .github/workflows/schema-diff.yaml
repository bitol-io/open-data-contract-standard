name: Schema Diff Analysis

on:
  pull_request:
    branches: ["*"]
    paths:
      - 'schema/odcs-json-schema-*.json'

jobs:
  schema-diff:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to access previous schema files
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install jq (optional, for better JSON formatting)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      
      - name: Run schema diff analysis
        id: schema-diff
        run: |
          # Capture the diff output to stderr (which will be used for the comment)
          # and also capture the exit code
          if output=$(bash src/script/schema-diff.sh 2>&1); then
            echo "diff_output<<EOF" >> $GITHUB_OUTPUT
            echo "$output" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "diff_output<<EOF" >> $GITHUB_OUTPUT
            echo "$output" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Comment on PR
        if: always() && steps.schema-diff.outputs.diff_output != ''
        uses: actions/github-script@v7
        with:
          script: |
            const diffOutput = `${{ steps.schema-diff.outputs.diff_output }}`;
            
            // Check if this is a new comment or update existing one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('## Schema Diff Analysis')
            );
            
            const commentBody = diffOutput;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            } 